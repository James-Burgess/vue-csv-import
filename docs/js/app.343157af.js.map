{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/App.vue?889f","webpack:///./src/components/VueCsvImport.vue","webpack:///./src/components/VueCsvImport.vue?2c08","webpack:///./src/components/VueCsvErrors.vue","webpack:///./src/components/VueCsvErrors.vue?a60a","webpack:///./src/components/VueCsvInput.vue","webpack:///./src/util/mimeDictionary.js","webpack:///./src/components/VueCsvInput.vue?bcd8","webpack:///./src/components/VueCsvMap.vue","webpack:///./src/components/VueCsvMap.vue?3282","webpack:///./src/components/VueCsvSubmit.vue","webpack:///./src/components/VueCsvSubmit.vue?89c6","webpack:///./src/components/VueCsvToggleHeaders.vue","webpack:///./src/components/VueCsvToggleHeaders.vue?ef28","webpack:///./src/index.js","webpack:///./src/main.js","webpack:///./src/assets/logo.png","webpack:///./src/App.vue?f4d0"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","alt","src","class","href","target","csv","fields","file","auto-match","url","hljsDefineVue","hljs","subLanguage","contains","COMMENT","relevance","begin","end","excludeBegin","excludeEnd","mounted","document","querySelectorAll","forEach","block","highlightBlock","render","errors","VueCsvImportData","defaultLanguage","fileRequired","invalidMimeType","toggleHeaders","submitBtn","fieldColumn","csvColumn","item","label","required","val","props","modelValue","Array","type","text","default","setup","emit","inputName","map","fileHasHeaders","csvSample","rawCsv","language","firstSampleRow","allFieldsAreMapped","field","buildMappedCsv","newCsv","row","newRow","column","error","$attrs","parseConfig","fileMimeTypes","change","ref","mimeTypes","guessMimeType","path","extension","split","pop","findKey","obj","extensions","includes","String","headers","Boolean","validation","csvRef","labels","validate","mimeType","tmpFile","files","newCurrentFile","reader","FileReader","readAsText","onload","evt","parse","preview","skipEmptyLines","onerror","err","console","log","deep","sample","noThead","selectAttributes","autoMatch","autoMatchIgnoreCase","newVal","columnName","index","fieldName","toLowerCase","trim","colName","submit","a","post","then","response","catch","finally","toggle","toggleHasHeaders","labelAttributes","checkboxAttributes","VueCsvImportPlugin","install","app","options","merge","components","component","VueCsvImport","VueCsvErrors","VueCsvInput","VueCsvMap","VueCsvSubmit","VueCsvToggleHeaders","createApp","App","use","mount"],"mappings":"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","file":"js/app.343157af.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n    <div id=\"app\">\n        <img alt=\"Vue logo\" src=\"./assets/logo.png\"/>\n        <div class=\"container\">\n            <div class=\"row mt-5 text-center\">\n                <div class=\"col-6 offset-3\">\n                    <a href=\"/src/assets/csv-sample.csv\" target=\"_blank\">Example CSV</a>\n                </div>\n            </div>\n            <section class=\"py-5\">\n                <div class=\"row mt-5\">\n                    <div class=\"col-8 offset-2\">\n                        <h4>Example:</h4>\n                        <pre><code class=\"html\">&lt;vue-csv-import\n    v-slot=\"{file}\"\n    v-model=\"csv\"\n    :fields=\"{name: {required: false, label: 'Name'}, age: {required: true, label: 'Age'}}\"\n&gt;\n    &lt;vue-csv-toggle-headers&gt;&lt;/vue-csv-toggle-headers&gt;\n    &lt;vue-csv-errors&gt;&lt;/vue-csv-errors&gt;\n    &lt;vue-csv-input&gt;&lt;/vue-csv-input&gt;\n    &lt;vue-csv-map :auto-match=\"false\"&gt;&lt;/vue-csv-map&gt;\n&lt;/vue-csv-import&gt;</code></pre>\n                    </div>\n                </div>\n                <div class=\"row mt-5\">\n                    <div class=\"col-8 offset-2\">\n                        <h4 class=\"mb-4\">Result:</h4>\n                        <vue-csv-import\n                            v-slot=\"{file}\"\n                            v-model=\"csv\"\n                            :fields=\"{name: {required: false, label: 'Name'}, age: {required: true, label: 'Age'}}\"\n                        >\n                            <vue-csv-errors></vue-csv-errors>\n                            <vue-csv-toggle-headers></vue-csv-toggle-headers>\n                            <vue-csv-input></vue-csv-input>\n                            <vue-csv-map :auto-match=\"false\"></vue-csv-map>\n                            <vue-csv-submit url=\"/\"></vue-csv-submit>\n                        </vue-csv-import>\n                        <pre class=\"mt-15\" v-if=\"csv\"><code>{{ csv }}</code></pre>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n</template>\n\n<script>\n    import hljs from 'highlight.js';\n    import 'highlight.js/styles/github.css';\n\n    function hljsDefineVue(hljs) {\n        return {\n            subLanguage: \"xml\",\n            contains: [\n                hljs.COMMENT(\"<!--\", \"-->\", {\n                    relevance: 10,\n                }),\n                {\n                    begin: /^(\\s*)(<script>)/gm,\n                    end: /^(\\s*)(<\\/script>)/gm,\n                    subLanguage: \"javascript\",\n                    excludeBegin: true,\n                    excludeEnd: true,\n                },\n                {\n                    begin: /^(\\s*)(<script lang=[\"']ts[\"']>)/gm,\n                    end: /^(\\s*)(<\\/script>)/gm,\n                    subLanguage: \"typescript\",\n                    excludeBegin: true,\n                    excludeEnd: true,\n                },\n                {\n                    begin: /^(\\s*)(<style(\\sscoped)?>)/gm,\n                    end: /^(\\s*)(<\\/style>)/gm,\n                    subLanguage: \"css\",\n                    excludeBegin: true,\n                    excludeEnd: true,\n                },\n                {\n                    begin: /^(\\s*)(<style lang=[\"'](scss|sass)[\"'](\\sscoped)?>)/gm,\n                    end: /^(\\s*)(<\\/style>)/gm,\n                    subLanguage: \"scss\",\n                    excludeBegin: true,\n                    excludeEnd: true,\n                },\n                {\n                    begin: /^(\\s*)(<style lang=[\"']stylus[\"'](\\sscoped)?>)/gm,\n                    end: /^(\\s*)(<\\/style>)/gm,\n                    subLanguage: \"stylus\",\n                    excludeBegin: true,\n                    excludeEnd: true,\n                },\n            ],\n        };\n    }\n\n    hljsDefineVue(hljs);\n\n    export default {\n        name: \"App\",\n        data() {\n            return {\n                csv: null,\n            };\n        },\n        mounted() {\n            document.querySelectorAll('pre code').forEach((block) => {\n                hljs.highlightBlock(block);\n            });\n        }\n    };\n</script>\n\n<style>\n#app {\n    font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n}\n\n.container {\n    text-align: left;\n}\n\ncode {\n    background-color: #eee;\n    border: 1px solid #999;\n    display: block;\n    padding: 20px;\n}\n\n#app .form {\n    text-align: left;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=339acf2f\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=339acf2f&lang=css\"\nscript.render = render\n\nexport default script","<template>\n    <slot\n        :errors=\"VueCsvImportData.errors\"\n        :fields=\"VueCsvImportData.fields\"\n        :file=\"VueCsvImportData.file\"\n    ></slot>\n</template>\n\n<script>\n    import {computed, reactive, provide} from 'vue';\n    import drop from 'lodash/drop';\n    import every from 'lodash/every';\n    import forEach from 'lodash/forEach';\n    import get from 'lodash/get';\n    import isArray from 'lodash/isArray';\n    import map from 'lodash/map';\n    import set from 'lodash/set';\n    import merge from 'lodash/merge';\n\n    const defaultLanguage = {\n        errors: {\n            fileRequired: 'A file is required',\n            invalidMimeType: \"Invalid file type\"\n        },\n        toggleHeaders: 'File has headers',\n        submitBtn: 'Submit',\n        fieldColumn: 'Field',\n        csvColumn: 'Column'\n    };\n\n    const mapFields = function (fields) {\n        if (isArray(fields)) {\n            return map(fields, (item) => {\n                return {\n                    key: item,\n                    label: item,\n                    required: true\n                };\n            });\n        }\n\n        return map(fields, (val, key) => {\n            return {\n                key: key,\n                label: get(val, 'label', val),\n                required: get(val, 'required', true),\n            };\n        });\n    }\n\n    export default {\n        props: {\n            modelValue: Array,\n            fields: {\n                type: [Object, Array],\n                required: true\n            },\n            text: {\n                default() {\n                    return {};\n                }\n            }\n        },\n        setup(props, {emit}) {\n            let VueCsvImportData = reactive({\n                errors: [],\n                inputName: 'csv',\n                file: null,\n                map: {},\n                value: {},\n                fields: mapFields(props.fields),\n                fileHasHeaders: null,\n                csvSample: null,\n                rawCsv: null,\n                language: merge({}, defaultLanguage, props.text),\n                firstSampleRow: computed(() => isArray(VueCsvImportData.csvSample) && isArray(VueCsvImportData.csvSample[0]) ? VueCsvImportData.csvSample[0] : null),\n                allFieldsAreMapped: computed(() => every(VueCsvImportData.fields, function (field) {\n                    return typeof VueCsvImportData.map[field.key] !== 'undefined' || !field.required;\n                })),\n            });\n\n            const buildMappedCsv = function () {\n                let newCsv = VueCsvImportData.fileHasHeaders ? VueCsvImportData.rawCsv : drop(VueCsvImportData.rawCsv);\n\n                VueCsvImportData.value = map(newCsv, (row) => {\n                    let newRow = {};\n                    forEach(VueCsvImportData.map, (column, field) => {\n                        set(newRow, field, get(row, column));\n                    });\n\n                    return newRow;\n                });\n\n                emit('update:modelValue', VueCsvImportData.value);\n            };\n\n            provide('VueCsvImportData', VueCsvImportData);\n            provide('buildMappedCsv', buildMappedCsv);\n\n            return {\n                VueCsvImportData\n            };\n        }\n    };\n</script>\n","import { render } from \"./VueCsvImport.vue?vue&type=template&id=ab407fa8\"\nimport script from \"./VueCsvImport.vue?vue&type=script&lang=js\"\nexport * from \"./VueCsvImport.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <slot :errors=\"VueCsvImportData.errors.value\">\n        <span\n            v-bind=\"$attrs\"\n            v-for=\"error in VueCsvImportData.errors\"\n        >\n            {{ error }}\n        </span>\n    </slot>\n</template>\n\n<script>\n    import {inject} from 'vue';\n\n    export default {\n        name: \"VueCsvFiles\",\n        props: {\n            parseConfig: {\n                type: Object,\n                default() {\n                    return {};\n                }\n            },\n            fileMimeTypes: {\n                type: Array,\n                default: () => {\n                    return [\"text/csv\", \"text/x-csv\", \"application/vnd.ms-excel\", \"text/plain\"];\n                }\n            }\n        },\n        setup() {\n            const VueCsvImportData = inject('VueCsvImportData');\n\n            return {\n                VueCsvImportData,\n            }\n        },\n    };\n</script>\n","import { render } from \"./VueCsvErrors.vue?vue&type=template&id=46fe402d\"\nimport script from \"./VueCsvErrors.vue?vue&type=script&lang=js\"\nexport * from \"./VueCsvErrors.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <slot :file=\"file\" :change=\"change\">\n        <input ref=\"csvRef\" type=\"file\" @change=\"change\" :name=\"name\" v-bind=\"$attrs\">\n    </slot>\n</template>\n\n<script>\n    import {inject, ref, watch} from 'vue';\n    import get from 'lodash/get';\n    import merge from 'lodash/merge';\n    import Papa from \"papaparse\";\n    import guessMimeType from \"../util/mimeDictionary\";\n\n    export default {\n        name: \"CsvFile\",\n        props: {\n            name: {\n                type: String,\n                default: 'csv'\n            },\n            headers: {\n                type: [Boolean, null],\n                default: true\n            },\n            parseConfig: {\n                type: Object,\n                default() {\n                    return {};\n                }\n            },\n            validation: {\n                type: Boolean,\n                default: true,\n            },\n            fileMimeTypes: {\n                type: Array,\n                default: () => {\n                    return [\"text/csv\", \"text/x-csv\", \"application/vnd.ms-excel\", \"text/plain\"];\n                }\n            }\n        },\n        setup(props) {\n            const csvRef = ref(null);\n            const VueCsvImportData = inject('VueCsvImportData');\n            const buildMappedCsv = inject('buildMappedCsv');\n            const labels = VueCsvImportData.language;\n\n            VueCsvImportData.inputName = name;\n            VueCsvImportData.fileHasHeaders = props.headers !== null ? !!props.headers : null;\n\n            const validate = function (file) {\n                VueCsvImportData.errors = [];\n\n                if (!file) {\n                    VueCsvImportData.errors.push(labels.errors.fileRequired);\n                }\n\n                if (props.validation) {\n                    const mimeType = file.type === \"\" ? guessMimeType(file.name) : file.type;\n\n                    if (!props.fileMimeTypes.includes(mimeType)) {\n                        VueCsvImportData.errors.push(labels.errors.invalidMimeType);\n                    }\n\n                    return VueCsvImportData.errors.length === 0;\n                }\n\n                return true;\n            }\n\n            const change = function () {\n                let tmpFile = csvRef.value.files ? csvRef.value.files[0] : null;\n\n                if (validate(tmpFile)) {\n                    VueCsvImportData.file = tmpFile;\n                }\n            }\n\n            watch(() => VueCsvImportData.file, newCurrentFile => {\n                if (!newCurrentFile) {\n                    VueCsvImportData.csvSample.value = null;\n                    VueCsvImportData.rawCsv.value = null;\n                }\n                let reader = new FileReader();\n                reader.readAsText(VueCsvImportData.file, \"UTF-8\");\n                reader.onload = function (evt) {\n                    VueCsvImportData.csvSample = get(Papa.parse(evt.target.result, merge({\n                        preview: 2,\n                        skipEmptyLines: true\n                    }, props.parseConfig)), \"data\");\n                    VueCsvImportData.rawCsv = get(Papa.parse(evt.target.result, merge({skipEmptyLines: true}, props.parseConfig)), \"data\");\n                };\n                reader.onerror = function (err) {\n                    console.log(err);\n                };\n            }, {deep: true});\n\n            watch(() => VueCsvImportData.fileHasHeaders, () => {\n                if (VueCsvImportData.allFieldsAreMapped) {\n                    buildMappedCsv();\n                }\n            });\n\n            return {\n                file: VueCsvImportData.file,\n                change,\n                csvRef\n            }\n        },\n    };\n</script>\n","import findKey from 'lodash/findKey'\n\nconst mimeTypes = {\n    \"text/csv\": {\n        \"source\": \"iana\",\n        \"compressible\": true,\n        \"extensions\": [\"csv\"]\n    },\n    \"application/vnd.ms-excel\": {\n        \"source\": \"iana\",\n        \"compressible\": false,\n        \"extensions\": [\"xls\", \"xlm\", \"xla\", \"xlc\", \"xlt\", \"xlw\"]\n    },\n    \"text/plain\": {\n        \"source\": \"iana\",\n        \"compressible\": true,\n        \"extensions\": [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"ini\"]\n    },\n};\n\n\nexport default function guessMimeType(path) {\n    if (!path || typeof path !== 'string') {\n        return false\n    }\n\n    let extension = path.split(\".\").pop();\n\n    if (!extension) {\n        return false\n    }\n\n    return findKey(mimeTypes, obj => obj.extensions.includes(extension)) || false;\n}\n","import { render } from \"./VueCsvInput.vue?vue&type=template&id=74be5acf\"\nimport script from \"./VueCsvInput.vue?vue&type=script&lang=js\"\nexport * from \"./VueCsvInput.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <slot\n        :sample=\" VueCsvImportData.firstSampleRow\"\n        :map=\"VueCsvImportData.map\"\n        :fields=\"VueCsvImportData.fields\"\n    >\n        <template v-if=\"VueCsvImportData.firstSampleRow\">\n            <table v-bind=\"$attrs\">\n                <thead v-if=\"!noThead\">\n                    <tr>\n                        <th>{{ labels.fieldColumn }}</th>\n                        <th>{{ labels.csvColumn }}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(field, key) in VueCsvImportData.fields\" :key=\"key\">\n                        <td>{{ field.label }}</td>\n                        <td>\n                            <select\n                                v-bind=\"selectAttributes\"\n                                :name=\"`csv_uploader_map_${key}`\"\n                                v-model=\"VueCsvImportData.map[field.key]\"\n                            >\n                                <option v-if=\"!field.required\" :value=\"null\">&nbsp;</option>\n                                <option\n                                    v-for=\"(column, key) in VueCsvImportData.firstSampleRow\"\n                                    :key=\"key\"\n                                    :value=\"key\"\n                                >{{ column }}\n                                </option>\n                            </select>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </template>\n    </slot>\n</template>\n\n<script>\n    import {inject, watch} from 'vue';\n\n    export default {\n        name: \"CsvMap\",\n        props: {\n            noThead: {\n                type: Boolean,\n                default: false,\n            },\n            selectAttributes: {\n                type: Object,\n                default() {\n                    return {};\n                }\n            },\n            autoMatch: {\n                type: Boolean,\n                default: true\n            },\n            autoMatchIgnoreCase: {\n                type: Boolean,\n                default: true\n            }\n        },\n        setup(props) {\n            const VueCsvImportData = inject('VueCsvImportData');\n            const buildMappedCsv = inject('buildMappedCsv');\n            const labels = VueCsvImportData.language;\n\n            watch(() => VueCsvImportData.map, function () {\n                if (VueCsvImportData.allFieldsAreMapped) {\n                    buildMappedCsv();\n                }\n            }, {deep: true});\n\n            if (props.autoMatch) {\n                watch(() => VueCsvImportData.csvSample, function (newVal) {\n                    if (newVal) {\n                        VueCsvImportData.fields.forEach(field => {\n                            newVal[0].forEach((columnName, index) => {\n                                let fieldName = props.autoMatchIgnoreCase ? field.label.toLowerCase().trim() : field.label.trim();\n                                let colName = props.autoMatchIgnoreCase ? columnName.toLowerCase().trim() : columnName.trim();\n                                if (fieldName === colName) {\n                                    VueCsvImportData.map[field.key] = index;\n                                }\n                            });\n                        });\n                    }\n                });\n            }\n\n            return {\n                VueCsvImportData,\n                labels\n            }\n        },\n    };\n</script>\n","import { render } from \"./VueCsvMap.vue?vue&type=template&id=03005618\"\nimport script from \"./VueCsvMap.vue?vue&type=script&lang=js\"\nexport * from \"./VueCsvMap.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <slot name=\"submit\" :submit=\"submit\" :mapped-csv=\"VueCsvImportData.value\">\n        <button type=\"submit\" v-bind=\"$attrs\" @click.prevent=\"submit\">\n            {{ labels.submitBtn }}\n        </button>\n    </slot>\n</template>\n\n<script>\n    import {inject} from 'vue';\n    import axios from 'axios';\n\n    export default {\n        name: \"VueCsvImportSubmit\",\n        props: {\n            url: {\n                type: String,\n                required: true,\n            }\n        },\n        setup(props) {\n            const VueCsvImportData = inject('VueCsvImportData');\n            const buildMappedCsv = inject('buildMappedCsv');\n            const labels = VueCsvImportData.language;\n\n            const submit = function () {\n                buildMappedCsv();\n\n                axios.post(props.url, {[VueCsvImportData.inputName]: VueCsvImportData.value}).then(response => {\n                    emit('send-success', response);\n                }).catch(response => {\n                    emit('send-error', response);\n                }).finally(response => {\n                    emit('send-complete', response);\n                });\n            };\n\n            return {\n                submit,\n                VueCsvImportData,\n                labels\n            }\n        },\n    };\n</script>\n","import { render } from \"./VueCsvSubmit.vue?vue&type=template&id=af53b2b0\"\nimport script from \"./VueCsvSubmit.vue?vue&type=script&lang=js\"\nexport * from \"./VueCsvSubmit.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <slot :headers=\"VueCsvImportData.fileHasHeaders\" :toggle=\"toggleHasHeaders\">\n        <label v-bind=\"labelAttributes\">\n            <input\n                type=\"checkbox\"\n                v-bind=\"checkboxAttributes\"\n                :value=\"VueCsvImportData.fileHasHeaders\"\n                @change=\"toggleHasHeaders\"\n            >\n            {{ labels.toggleHeaders }}\n        </label>\n    </slot>\n</template>\n\n<script>\n    import {inject} from 'vue';\n\n    export default {\n        name: \"ToggleHasHeaders\",\n        props: {\n            labelAttributes: {},\n            checkboxAttributes: {},\n        },\n        setup() {\n            const VueCsvImportData = inject('VueCsvImportData');\n            const labels = VueCsvImportData.language;\n\n            const toggleHasHeaders = function () {\n                VueCsvImportData.fileHasHeaders = !VueCsvImportData.fileHasHeaders;\n            }\n\n            return {\n                VueCsvImportData,\n                toggleHasHeaders,\n                labels\n            }\n        },\n    };\n</script>\n","import { render } from \"./VueCsvToggleHeaders.vue?vue&type=template&id=13cd7228\"\nimport script from \"./VueCsvToggleHeaders.vue?vue&type=script&lang=js\"\nexport * from \"./VueCsvToggleHeaders.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import merge from 'lodash/merge';\nimport VueCsvImport from \"./components/VueCsvImport.vue\";\nimport VueCsvErrors from \"./components/VueCsvErrors.vue\";\nimport VueCsvInput from \"./components/VueCsvInput.vue\";\nimport VueCsvMap from \"./components/VueCsvMap.vue\";\nimport VueCsvSubmit from \"./components/VueCsvSubmit.vue\";\nimport VueCsvToggleHeaders from \"./components/VueCsvToggleHeaders.vue\";\n\nconst VueCsvImportPlugin = {\n    install(app, options) {\n        options = merge({\n            components: {\n                'vue-csv-import': 'vue-csv-import',\n                'vue-csv-errors': 'vue-csv-errors',\n                'vue-csv-input': 'vue-csv-input',\n                'vue-csv-map': 'vue-csv-map',\n                'vue-csv-submit': 'vue-csv-submit',\n                'vue-csv-toggle-headers': 'vue-csv-toggle-headers',\n            }\n        }, options);\n\n        app.component(options.components['vue-csv-import'], VueCsvImport)\n        app.component(options.components['vue-csv-errors'], VueCsvErrors)\n        app.component(options.components['vue-csv-input'], VueCsvInput)\n        app.component(options.components['vue-csv-map'], VueCsvMap)\n        app.component(options.components['vue-csv-submit'], VueCsvSubmit)\n        app.component(options.components['vue-csv-toggle-headers'], VueCsvToggleHeaders)\n    }\n}\n\nexport {VueCsvToggleHeaders, VueCsvSubmit, VueCsvMap, VueCsvInput, VueCsvErrors, VueCsvImport, VueCsvImportPlugin};\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\nimport \"./index.css\";\nimport {VueCsvImportPlugin} from \"./index.js\";\n\ncreateApp(App)\n    .use(VueCsvImportPlugin)\n    .mount(\"#app\");\n","module.exports = __webpack_public_path__ + \"img/logo.82b9c7a5.png\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=339acf2f&lang=css\""],"sourceRoot":""}